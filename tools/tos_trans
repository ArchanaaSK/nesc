#!/usr/bin/perl
use strict;


##################################################
# main loop
##################################################
{
    my $line;
    while ($line = <>) {
        chomp($line);
        $line =~ s!\t!        !g;
        $line = fix_var($line);
        $line = fix_command_def($line);
        $line = fix_call($line);
        $line = fix_event($line);
        $line = fix_task($line);
        $line = fix_post($line);
        $line = fix_all_names($line);
        print "  ", $line, "\n";
    }
}



#
# translate:  TOS_CALL_COMMAND(commandname)(args)  
#        to   call commandname(args)
sub fix_call($) {
    my $line = shift;
    $line =~ s!TOS_CALL_COMMAND\((.*?)\)!call $1!;
    return $line;
}


#
# translate:  VAR(varname)
#        to   varname
sub fix_var($) {
    my $line = shift;
    $line =~ s!VAR\((.*?)\)!$1!g;
    return $line
}


#
# translate:  TOS_TASK(taskname)
#        to   task void taskname()
#
sub fix_task($) {
    my $line = shift;

    $line =~ s!TOS_TASK\((.*?)\)!task void $1()!;
    return $line;
}


#
# translate:  type TOS_EVENT(eventname)
#        to   event type eventname
#
sub fix_event($) {
    my $line = shift;
    return $line unless($line =~ /TOS_EVENT/);

    my ($beg,$type,$name,$end) = ($line =~ m!^(.*?)(\S+?)\s+TOS_EVENT\((.*?)\)(.*)!);
    $name = fix_name_style($name);
    return $beg."event $type $name".$end;
}


#
# translate:  type TOS_COMMAND(name)
#        to   command type name
#
sub fix_command_def($) {
    my $line = shift;
    return $line unless($line =~ /TOS_EVENT/);

    my ($beg,$type,$name,$end) = ($line =~ m!^(.*?)(\S+?)\s+TOS_COMMAND\((.*?)\)(.*)!);
    $name = fix_name_style($name);
    return $beg."command $type $name".$end;
}


#
# translate:  FOO_BAR_BAT_BAZ
#        to   Foo.Bar.Bat.Baz
#
# NOTE: some of the periods are spurious, but there is no good way to
# automatically tell which ones
#
sub fix_all_names($) {
    my $line = shift;
    while ($line =~ /[A-Z]_[A-Z]/) {
        my ($beg,$name,$end) = ($line =~ /^(.*?)([A-Z]+_[A-Z_]+)(.*)$/);
        $line = $beg . fix_name_style($name) . $end;
    }
    return $line;
}
sub fix_name_style($) {
    my $name = shift;
    
    # do stylistic conversion
    my $temp = "";
    foreach ( split('_', $name) ) {
        $temp .= ucfirst( lc($_) );
        $temp .= ".";
    }
    chop($temp);

    return $temp;
}


#
# translate:  TOS_POST_TASK(name)
#        to   post name()
#
sub fix_post($) {
    my $line = shift;

    $line =~ s!TOS_POST_TASK\((.*?)\)!post $1()!;
    return $line;
}
